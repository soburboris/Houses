import React, { Component } from 'react'
import { connect } from 'react-redux'
import * as R from 'ramda'
import { Link } from 'react-router-dom'
import styled from 'styled-components'

import { fetchHousesById } from 'actions'
import {getHouseById} from 'selectors'


class House extends Component {
    componentDidMount() {
        // const{match} = this.props
        console.log('props', this.props)
        this.props.fetchHousesById(this.props.match.params.id)
    }



    renderFields() {
        const { houses } = this.props

        

        const columnFields = R.compose(
            R.toPairs,
            R.pick([
                'builder',
                'square',
                'garage',
                'bedrooms',
                'type',
                'phone',
                
                    
            ])
        )(houses)

        const coordinatesFree = R.without([houses.address.coordinates], houses.address)

        const columnFields2 = R.compose(
            R.toPairs,
            R.pick([
                'latitude',
                'longitude'
                
              
            ])
        )(houses.address.coordinates)

        const split = R.join(' ', houses.amenities)
        
        const columnFields3 = R.compose(
            
            R.toPairs,
        
            R.pick([
                'amenities'
               
            ])
           
        )(houses)

        const columnFields4 =  R.compose(
            
            R.toPairs,
        
            R.pick([
                'street',
                'sity',
                'state',
                'zip'
            ])
           
        )(coordinatesFree)

            const assoc = R.concat(R.concat(columnFields, columnFields4), R.concat(columnFields2,columnFields3))
            console.log(split)

const Column = styled.div`
border-bottom:1px dashed #E5E5E5;
clear:both;
overflow: hidden;
`
const Container = styled.div`
float:left;
font-size: 1.2em;
line-height: 20px;
color: #666;
`
const Under = styled.div`
float: left;
line-height: 23px;
margin-left: 45px;
font-size:16px;
color: #777;
text-shadow: 1px 1px 1px rgba(255, 255, 255, 1);
`
        return assoc.map(([key, value]) => (
            <Column  key={key} className=' container d-flex'>
                
                <Container >
                    <p>{key}</p>
                </Container>
                <div>
           
                </div>
                <Under >
                    {value}
                </Under>
                <div>
               
                </div>
            </Column>
        )
        )
    }

    renderCarusel() {
        const { houses } = this.props
        return (
            <div id="carouselExampleInterval" className="carousel slide" data-bs-ride="carousel">
                <div className="carousel-inner">
                    <div className="carousel-item active" data-bs-interval="2000">
                        <img
                            className='d-block w-100'
                            src={houses.images[0]}
                            alt={houses.product}
                        />
                    </div>
                    {houses.images.length > 1 && <div className="carousel-item" >
                        <img
                            className='d-block w-100'
                            src={houses.images[1]}
                            alt={houses.product}
                        />
                    </div>}
                    <button className="carousel-control-prev" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="prev">
                        <span className="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span className="visually-hidden">Previous</span>
                    </button>
                    <button className="carousel-control-next" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="next">
                        <span className="carousel-control-next-icon" aria-hidden="true"></span>
                        <span className="visually-hidden">Next</span>
                    </button>
                </div>
            </div>


        )

    }

    renderContent() {
        const { houses } = this.props

        return (
            <div className='thumbnail'>
                <div className='row'>
                    <div className='col-sm-8 d-flex flex-row'>

                        {this.renderCarusel()}
                    </div>
                    <div className='col-sm-4'>
                        {this.renderFields()}
                    </div>

                </div>
                <div className='caption-full'>
                    <h4 className='pull-right'>${houses.price}</h4>
                    <h4>{houses.product}</h4>
                    <p>{houses.description}</p>

                </div>
            </div>
        )
    }

    renderSidebar() {

        const { houses } = this.props
       
        return (
            <div>


                <div className='form-group'>
                    <h1>{houses.product}</h1>
                    <h2>${houses.price}</h2>
                </div>
                <Link to='/' className='btn btn-info btn-block'>Back to store</Link>

            </div>
        )
    }

    render() {
        const { houses } = this.props
       
        return (
            <div className='view-container'>
                <div className='container'>
                    <div className='row'>
                        <div className='col-md-10'>
                            {houses && this.renderContent()}
                        </div>
                        <div className='col-md-2'>
                            {houses && this.renderSidebar()}
                        </div>

                    </div>

                </div>

            </div>
        )
    }
}
const mapStateToProps = state => {
    return {
        houses: getHouseById(state , state.housePage.id)
    }
}



const mapDispatchToProps = {
    fetchHousesById
}
export default connect(mapStateToProps, mapDispatchToProps)(House)