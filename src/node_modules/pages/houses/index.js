import React, { Component } from "react";
import { connect } from 'react-redux'

import { Link } from 'react-router-dom'
import * as R from 'ramda'


import { fetchHouses } from 'actions'
import { getHouses, limit, getPaginator } from 'selectors'
import Layout from 'containers/layout'
import Pagination from 'components/pagination'





class Houses extends Component {

  componentDidMount() {
    this.props.fetchHouses()

  }
  // const [listings, setListings] = useState([]);





  renderHouse(house, index) {

    const shortDescription = `${R.take(60, house.description)}...`


    return (
      <div className='col-sm4 col-lg-4 col-md-3 align-self-center' key={index}>
        <div className=' figure border border-info p-2 m-2'>

          <div id="carouselExampleInterval" className="carousel slide" data-bs-ride="carousel">
            <div className="carousel-inner">
              <div className="carousel-item active" data-bs-interval="10000">
                <img
                  className='d-block w-100'
                  src={house.images[0]}
                  alt={house.product}
                  width="200" height="222"

                />
              </div>
              {house.images.length > 1 && <div className="carousel-item" >
                <img
                  className='d-block w-100'
                  src={house.images[1]}
                  alt={house.product}


                />
              </div>}
              {/* <button className="carousel-control-prev" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="prev">
                        <span className="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span className="visually-hidden">Previous</span>
                    </button>
                    <button className="carousel-control-next" type="button" data-bs-target="#carouselExampleInterval" data-bs-slide="next">
                        <span className="carousel-control-next-icon" aria-hidden="true"></span>
                        <span className="visually-hidden">Next</span>
                    </button> */}
            </div>
          </div>

          <div>
            
            <h5>
              <Link to={`/listing/house/${house.id}`}>
                {house.product}
              </Link>
            </h5>
            <h4 className='pull-right'>${house.price}</h4>
            <p className='fw-light'>{shortDescription}</p>
            <p >
              {/* <button 
                        className='btn btn-primary'
                        // onClick={() => (addPhoneToBasket(house.id))}
                        > Buy Now!</button> */}
              <Link to={`/listing/house/${house.id}`}
                className='btn btn btn-outline-info d-flex justify-content-center'
              >
                More info
                        </Link>
            </p>

          </div>
        </div>
      </div>
    )
  }


  render() {

    const { location, match, houses } = this.props
    const { offset, currentPage } = getPaginator(location.search)
    const url = match.url

// console.log('props:', props)


    const arr = houses.filter((el, i) =>
      i >= offset && i < currentPage * limit)
    console.log('arr',arr)

    return (
      <Layout>
        <div className='container page'>
          <div className='row '>
            {arr.map((house, index) => this.renderHouse(house, index))}
          </div>
          <div className='row '>
            <Pagination total={houses.length} limit={limit} url={url} currentPage={currentPage} />
          </div>
         

        </div>
      </Layout>
    )
  }

}

const mapStateToProps = state => ({
  houses: getHouses(state)
})

const mapDispatchToProps = {
  fetchHouses
}

export default connect(mapStateToProps, mapDispatchToProps)(Houses)